import random
import time

class Array(object):

   # constructor
   def __init__(self, initialSize):
      self.__a = [None] * initialSize  # the array
      self.__nElems = 0                # no items yet

   # return the number of elements in the Array
   def __len__(self):  return self.__nElems
   # return the i'th element of the Array, or None if i is out of bounds
   def get(self, i):
      if i >= 0 and i < self.__nElems:
         return self.__a[i]

   # improved version - array grows as it fills up
   # insert an item at end of array
   def insert(self, item):
      self.__grow()              # Grow the array, if necessary

      # now just insert the next element at the end
      self.__a[self.__nElems] = item # insert it
      self.__nElems += 1             # increment size

   # find a specified item in the list. Return the position
   # of the first occurrance, or None, if it can't be found
   def find(self, item):
      for j in range(self.__nElems):
         if self.__a[j] == item:
            return j

      return None
   # Try to remove the first instance of the specified item
   # in the list. Return True if successfully found and removed
   # the item from the list, False if the item couldn't be found
   def remove(self, item):
      for j in range(self.__nElems):
         if self.__a[j] == item:
            # move everything to the right of the found element
            # one position to the left.
            for k in range(j, self.__nElems-1):
               self.__a[k] = self.__a[k+1]
            self.__nElems -= 1
            return True

      # made it here, so couldn't find the item
      return False
   # Produce a list-like string representation of the array
   def __str__(self):
      ans = "["

      # if there's at least one element, append them one by one.
      # note that this is a fencepost-type loop.
      if self.__nElems > 0:
         ans += str(self.__a[0])
         for i in range(1, self.__nElems):
            ans += ", " + str(self.__a[i])

      ans += "]"

      return ans

def partialShuffle(self,r):
   for i in range(self.__nElems):
      chance = random.randint(1,100)
      if chance <= r*100:
         j = random.randint(i,self.__nElems-1)

         temp = self.__a[i]
         self.__a[i] = self.__a[j]
         self.__a[j] = temp
